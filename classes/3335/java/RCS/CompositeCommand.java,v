head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2014.11.05.15.30.13;	author donahoo;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.09.17.58.08;	author donahoo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@<>
@
text
@import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;

class CompositeCommand implements Command {

  private List<Command> commands = new ArrayList<>();

  public void append(Command c) {
    commands.add(c);
  }

  public void execute() {
    for (Command c : commands) {
      c.execute();
    }
  }

  public void undo() {
    for (ListIterator<Command> i = commands.listIterator(commands.size()); i.hasPrevious();) {
      i.previous().undo();
    }
  }
}
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
  private List<Command> commands = new ArrayList<Command>();
@
