<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./SendTCP_files/filelist.xml">
<title>// Authors: Saifee Suterwala, Rajesh Balla, Wei Cheng, Corinne Rhodes</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>chengw</o:LastAuthor>
  <o:Revision>6</o:Revision>
  <o:TotalTime>7</o:TotalTime>
  <o:Created>2000-09-22T20:54:00Z</o:Created>
  <o:LastSaved>2000-09-22T20:58:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>1310</o:Words>
  <o:Characters>7467</o:Characters>
  <o:Company>Baylor University</o:Company>
  <o:Lines>62</o:Lines>
  <o:Paragraphs>14</o:Paragraphs>
  <o:CharactersWithSpaces>9170</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"MS Mincho";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:"\FF2D\FF33 \660E\671D";
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 65.95pt 1.0in 65.95pt;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<table border=0 cellspacing=0 cellpadding=0 width=691 style='width:7.2in;
 margin-left:50.15pt;border-collapse:collapse;mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr>
  <td width=691 valign=top style='width:7.2in;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>//
  Authors: Rajesh Balla, Wei Cheng, Corinne Rhodes, Saifee Suterwala. <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>//
  Date Created: May 2, 2000<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>//
  Last Modified: Sept 15, 2000<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>// <o:p></o:p></span></p>
  <p class=MsoPlainText style='text-align:justify'><span style='mso-fareast-font-family:
  "MS Mincho"'>// Description:<span style="mso-spacerun: yes">  </span>This is
  a program that implements the construction of a TCP packet.<span
  style="mso-spacerun: yes">  </span>// It takes a source address, source port,
  destination address, destination port <o:p></o:p></span></p>
  <p class=MsoPlainText style='text-align:justify'><span style='mso-fareast-font-family:
  "MS Mincho"'>// number, sequence number, acknowledgement number, the values for
  the SYN, ACK,<o:p></o:p></span></p>
  <p class=MsoPlainText style='text-align:justify'><span style='mso-fareast-font-family:
  "MS Mincho"'>// FIN, and RST flags.<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;stdio.h&gt;<span style="mso-spacerun: yes">      </span>// for printf()
  and fprintf() <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;stdlib.h&gt;<span style="mso-spacerun: yes">     </span>// for atoi()<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;signal.h&gt;<span style="mso-spacerun: yes">     </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;string.h&gt;<span style="mso-spacerun: yes">     </span>// for memset()<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;unistd.h&gt;<span style="mso-spacerun: yes">     </span>// or close()<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;netdb.h&gt;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;netinet/in.h&gt; <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;sys/socket.h&gt; // for socket(), connect(), send(), and recv()<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;arpa/inet.h&gt;<span style="mso-spacerun: yes">  </span>// for socketaddr_in
  and inet_addr() <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;netinet/ip.h&gt; // for ip struct<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>#include
  &lt;netinet/tcp.h&gt;// for tcp struct<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>char
  myBUFFER[80];<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>void
  send_packet(unsigned int, unsigned short, unsigned int, unsigned short);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>unsigned
  short in_cksum(unsigned short *, int);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>unsigned
  int host2ip(char *);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>void
  DieWithError (char *errorMessage); /* error handling function*/<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>main(int
  argc, char **argv)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>unsigned int srchost;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>unsigned int dsthost;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>unsigned short dstport;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>unsigned short srcport;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes"> </span><span style="mso-spacerun: yes">  </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>//check
  for the minimum number of arguements<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(argc &lt; 5 || argc &gt;= 6)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>fprintf(stderr, &quot;Usage: %s<span
  style="mso-spacerun: yes">  </span>&lt;srchost&gt; &lt;srcport&gt;
  &lt;dsthost&gt; &lt;dstport&gt;\n&quot;, argv[0]);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>exit(0);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>srchost= host2ip(argv[1]);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>srcport = atoi(argv[2]);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>dsthost = host2ip(argv[3]);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>dstport = atoi(argv[4]);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(dstport == 0) dstport = 80;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_packet(srchost, srcport, dsthost,
  dstport);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>//
  Creates the IP and TCP packet, opens the socket, calculate IP checksum,<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>void
  send_packet(unsigned int source_addr, unsigned short srcport, unsigned int
  dest_addr, unsigned short dest_port)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>struct send_tcp<span style="mso-spacerun:
  yes">   </span>/* structure for the TCP/IP packet to send */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>struct iphdr ip;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>struct tcphdr tcp;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>} send_tcp;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>struct pseudo_header<span
  style="mso-spacerun: yes">   </span>/* for calculating the checksum */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>unsigned int source_address;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>unsigned int dest_address;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>unsigned char placeholder;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>unsigned char protocol;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>unsigned short tcp_length;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>struct tcphdr tcp;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>} pseudo_header;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>int i;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>int tcp_socket;<span style="mso-spacerun:
  yes">  </span>/* raw socket to send our TCP packet through */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>struct sockaddr_in sin;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>int sinlen;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>char ans = 'n';<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>char temp;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>memset (&amp;send_tcp, 0,
  sizeof(send_tcp));<span style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Do you want to enter the
  sequence number (y/n)?:&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>fflush(stdin);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans = getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(ans =='y' || ans == 'Y')<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>printf(&quot;\n Enter the sequence
  number: &quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>scanf(&quot;%u&quot;,&amp;
  send_tcp.tcp.seq);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>else<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{ <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>printf(&quot;\n
  Using default sequence number = %d \n&quot;, getpid());<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">    </span><span style="mso-spacerun: yes"> </span><span
  style='mso-tab-count:1'> </span>send_tcp.tcp.seq = getpid();<span
  style='mso-tab-count:1'>  </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>ans ='n';<span style="mso-spacerun:
  yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Do you want to enter the
  Acknowledge Number (y/n)?:&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans = getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(ans =='y' || ans == 'Y')<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>printf(&quot;\n
  Enter the Acknowledge Number: &quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>scanf(&quot;%u&quot;,
  &amp; send_tcp.tcp.ack_seq);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">  </span><span style="mso-spacerun:
  yes">   </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>else<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{ <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">    </span><span style='mso-tab-count:1'>  </span>printf(&quot;\n
  Using default Acknowledge number = %d\n&quot;, 0);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">    </span><span style='mso-tab-count:1'>  </span>send_tcp.tcp.ack_seq
  = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans ='n';<span style="mso-spacerun:
  yes">          </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Do you want to set the
  SYN Flag (y/n)?:&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans = getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(ans =='y' || ans == 'Y')<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>printf(&quot;\n
  Setting the SYN flag\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>send_tcp.tcp.syn
  = 1;<span style="mso-spacerun: yes">       </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>else<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{ <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>printf(&quot;\n
  Resetting the SYN flag\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>send_tcp.tcp.syn
  = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans ='n';<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">  </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Do you want to set the
  ACK Flag (y/n)?:&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar(); <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans = getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(ans =='y' || ans == 'Y')<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">    </span><span style='mso-tab-count:1'>  </span>printf(&quot;\n
  Setting the ACK flag\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>send_tcp.tcp.ack
  = 1;<span style="mso-spacerun: yes">       </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>else<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{ <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>printf(&quot;\n Resetting the ACK
  flag\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>send_tcp.tcp.ack
  = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans ='n';<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">  </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Do you want to set the
  FIN Flag (y/n)?:&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans = getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(ans =='y' || ans == 'Y')<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">    </span><span style='mso-tab-count:1'>  </span>printf(&quot;\n
  Setting the FIN flag\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>send_tcp.tcp.fin
  = 1;<span style="mso-spacerun: yes">       </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>else<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{ <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">    </span><span style='mso-tab-count:1'>  </span>printf(&quot;\n
  Resetting the FIN flag\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>send_tcp.tcp.fin
  = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans ='n'; <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Do you want to set the
  RESET Flag (y/n)?:&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans = getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(ans =='y' || ans == 'Y')<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>printf(&quot;\n
  Setting the RESET flag\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">    </span><span style='mso-tab-count:1'>  </span>send_tcp.tcp.rst
  = 1;<span style="mso-spacerun: yes">       </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>else<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>{ <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>printf(&quot;\n Resetting the RESET
  flag\n\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span><span style='mso-tab-count:1'> </span>send_tcp.tcp.rst
  = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">     </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>ans ='n';<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">  </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>/* form ip packet */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.ihl = 5;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.version = 4;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.tos = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.tot_len = htons(40);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.id = getpid();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.frag_off = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.ttl = 255;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.protocol = IPPROTO_TCP;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.check = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.saddr = source_addr;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.daddr = dest_addr;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>/* form tcp packet */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.source = htons(srcport);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.dest =
  htons(dest_port);<span style="mso-spacerun: yes">  </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.seq = htonl(send_tcp.tcp.seq);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">  </span><span style="mso-spacerun:
  yes"> </span>send_tcp.tcp.ack_seq = htonl(send_tcp.tcp.ack_seq); <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.res1 = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.doff = 5;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.psh = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.urg = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.res2 = 0; <o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.window = htons(1024);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.check = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.urg_ptr = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>/* setup the sin struct */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>sin.sin_family = AF_INET;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>sin.sin_port = send_tcp.tcp.source;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>sin.sin_addr.s_addr =
  send_tcp.ip.daddr;<span style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>/* (try to) open the socket */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>tcp_socket = socket(AF_INET, SOCK_RAW,
  IPPROTO_RAW);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(tcp_socket &lt; 0)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>perror(&quot;socket&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>exit(1);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>/* calculate the ip checksum */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.ip.check = in_cksum((unsigned
  short *)&amp;send_tcp.ip, 20);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>/* set the pseudo header fields */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>pseudo_header.source_address =
  send_tcp.ip.saddr;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>pseudo_header.dest_address =
  send_tcp.ip.daddr;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>pseudo_header.placeholder = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>pseudo_header.protocol = IPPROTO_TCP;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>pseudo_header.tcp_length = htons(20);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>bcopy((char *)&amp;send_tcp.tcp, (char
  *)&amp;pseudo_header.tcp, 20);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>send_tcp.tcp.check = in_cksum((unsigned
  short *)&amp;pseudo_header, 32);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>sinlen = sizeof(sin);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Hit a key to
  continue&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>sendto(tcp_socket, &amp;send_tcp,
  sizeof(send_tcp), 0, (struct sockaddr *)&amp;sin, sinlen);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n***** Sent TCP packet
  *****\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">  </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>printf(&quot;\n Hit any key to
  terminate!\n&quot;);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>getchar();<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes"> </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>close(tcp_socket);<span
  style="mso-spacerun: yes">   </span><span style="mso-spacerun:
  yes">   </span><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>//<span
  style="mso-spacerun: yes">  </span>finds the TCP checksum<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>unsigned
  short in_cksum(unsigned short *ptr, int nbytes)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>register long<span
  style="mso-spacerun: yes">           </span>sum;<span style="mso-spacerun:
  yes">            </span>/* assumes long == 32 bits */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>u_short<span style="mso-spacerun:
  yes">                 </span>oddbyte;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>register u_short<span
  style="mso-spacerun: yes">        </span>answer;<span style="mso-spacerun:
  yes">         </span>/* assumes u_short == 16 bits */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>/*<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>* Our algorithm is simple, using a
  32-bit accumulator (sum),<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>* we add sequential 16-bit words to
  it, and at the end, fold back<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>* all the carry bits from the top
  16 bits into the lower 16 bits.<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>*/<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>sum = 0;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>while (nbytes &gt; 1)<span
  style="mso-spacerun: yes">  </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">                </span>sum += *ptr++;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">                </span>nbytes -= 2;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">       </span><span style="mso-spacerun:
  yes">                         </span>/* mop up an odd byte, if necessary */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>if (nbytes == 1) {<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">                </span>oddbyte = 0;<span
  style="mso-spacerun: yes">            </span>/* make sure top half is zero */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">                </span>*((u_char *) &amp;oddbyte) =
  *(u_char *)ptr;<span style="mso-spacerun: yes">   </span>/* one byte only */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span><span style="mso-spacerun:
  yes">       </span>sum += oddbyte;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>/*<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>* Add back carry outs from top 16
  bits to low 16 bits.<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>*/<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>sum<span style="mso-spacerun: yes"> 
  </span>= (sum &gt;&gt; 16) + (sum &amp; 0xffff);<span style="mso-spacerun:
  yes">    </span>/* add high-16 to low-16 */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>sum += (sum &gt;&gt; 16);<span
  style="mso-spacerun: yes">                     </span>/* add carry */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>answer = ~sum;<span
  style="mso-spacerun: yes">          </span>/* ones-complement, then truncate
  to 16 bits */<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">        </span>return(answer);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>//
  converts the char string IP address to valid internet address<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>unsigned
  int host2ip(char *hostname)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>static struct in_addr i;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>struct hostent *h;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>i.s_addr = inet_addr(hostname);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>if(i.s_addr == -1)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>h = gethostbyname(hostname);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>if(h == NULL)<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>{<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>fprintf(stderr, &quot;cant find
  %s!\n&quot;, hostname);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">         </span>exit(0);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">      </span>bcopy(h-&gt;h_addr, (char
  *)&amp;i.s_addr, h-&gt;h_length);<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
  style="mso-spacerun: yes">   </span>return i.s_addr;<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>}<o:p></o:p></span></p>
  <p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><span
  style='mso-fareast-font-family:"MS Mincho"'><o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
