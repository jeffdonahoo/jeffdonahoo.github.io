head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2004.08.28.01.19.01;	author donahoo;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.11.12.20.00;	author donahoo;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.13.16.13.11;	author donahoo;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.09.14.28.36;	author donahoo;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.13.14.21.44;	author donahoo;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.26.16.59.41;	author donahoo;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.23.17.28.11;	author donahoo;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.25.13.28.27;	author donahoo;	state Exp;
branches;
next	;


desc
@@


1.8
log
@*** empty log message ***
@
text
@<HTML>
<HEAD>
<TITLE>TCP/IP Sockets in C:  Practical Guide for Programmers</TITLE>
</HEAD>
<BODY>

<TABLE>
<TR>
<TD>
<IMG SRC="../images/cpractical.gif"></TD>
<TD>Below is the example source code from "TCP/IP Sockets in C:
Practical Guide for Programmers" by Michael J. Donahoo and Kenneth
L. Calvert.  This book can be ordered at your favorite local bookstore
or online.  <P> <a
href="http://www.mkp.com/books_catalog/catalog.asp?ISBN=1-55860-826-5">Official
Book Website</A>
</table>
<P>

<b>Disclaimer:</b> The purpose of this book is to provide general
information about network programming as of the book's publication
date. The authors have included sample code that is intended for the
sole purpose of illustrating the use of the sockets API. Neither the
authors nor the publisher are aware of any third party patents or
proprietary rights that may cover any sample of any kind. The authors
and the Publisher DISCLAIM ALL EXPRESS AND IMPLIED WARRANTIES,
including warranties of merchantability and fitness for any particular
purpose. Your use or reliance upon any sample code or other
information in this book will be at your own risk. No one should use
any sample code (or illustrations) from this book in any software
application without first obtaining competent legal advice.
<P>
Example code: 
<UL>
<LI><A HREF="code/CSockets.tar.gz">Tarred and gzipped archive</A>
<LI><A HREF="code/CSockets.zip">Zip archive</A>
<LI>Individual Files
<UL>
<LI><A HREF="code/TCPEchoClient.c">TCPEchoClient.c</A>
<LI><A HREF="code/DieWithError.c">DieWithError.c</A>
<LI><A HREF="code/TCPEchoServer.c">TCPEchoServer.c</A>
<LI><A HREF="code/HandleTCPClient.c">HandleTCPClient.c</A>
<LI><A HREF="code/UDPEchoClient.c">UDPEchoClient.c</A>
<LI><A HREF="code/UDPEchoServer.c">UDPEchoServer.c</A>
<LI><A HREF="code/SigAction.c">SigAction.c</A>
<LI><A HREF="code/UDPEchoServer-SIGIO.c">UDPEchoServer-SIGIO.c</A>
<LI><A HREF="code/UDPEchoClient-Timeout.c">UDPEchoClient-Timeout.c</A>
<LI><A HREF="code/TCPEchoServer-Fork.c">TCPEchoServer-Fork.c (without
SIGCHLD)</A>
<LI><A HREF="code/TCPEchoServer-Fork-SIGCHLD.c">TCPEchoServer-Fork-SIGCHLD.c (with SIGCHLD)</A>
<LI><A HREF="code/TCPEchoServer.h">TCPEchoServer.h</A>
<LI><A HREF="code/CreateTCPServerSocket.c">CreateTCPServerSocket.c</A>
<LI><A HREF="code/AcceptTCPConnection.c">AcceptTCPConnection.c</A>
<LI><A HREF="code/TCPEchoServer-Thread.c">TCPEchoServer-Thread.c</A>
<LI><A HREF="code/TCPEchoServer-ForkN.c">TCPEchoServer-ForkN.c</A>
<LI><A HREF="code/TCPEchoServer-Select.c">TCPEchoServer-Select.c</A>
<LI><A HREF="code/BroadcastSender.c">BroadcastSender.c</A>
<LI><A HREF="code/BroadcastReceiver.c">BroadcastReceiver.c</A>
<LI><A HREF="code/MulticastSender.c">MulticastSender.c</A>
<LI><A HREF="code/MulticastReceiver.c">MulticastReceiver.c</A>
<LI><A HREF="code/ResolveName.c">ResolveName.c</A>
<LI><A HREF="code/ResolveService.c">ResolveService.c</A>
</UL>
<LI>Generally, compilation is as follows:
<UL>
  <LI> Linux: gcc -o TCPEchoClient TCPEchoClient.c DieWithError.c </LI>
  <LI> Solaris: gcc -o  TCPEchoClient TCPEchoClient.c DieWithError.c -lsocket -lnsl</LI>
  <LI> Both:  Add -lpthread to both Linux and Solaris for the threads example </LI>
</UL>
<LI>Note for older machines (e.g., SVR4 variants such as Solaris 2.5 and before):  A few
more include files may be necessary.  If you get compile errors about
u_short, try editing the include files as follows (<B>order
matters</B>):
<listing>
#include &lt;stdio.h&gt;      /* for printf() and fprintf() */
#include &lt;sys/types.h&gt;  /* for Socket data types */
#include &lt;sys/socket.h&gt; /* for socket(), connect(), send(), and recv() */
#include &lt;netinet/in.h&gt; /* for IP Socket data types */
#include &lt;arpa/inet.h&gt;  /* for sockaddr_in and inet_addr() */
#include &lt;stdlib.h&gt;     /* for atoi() */
#include &lt;string.h&gt;     /* for memset() */
#include &lt;unistd.h&gt;     /* for close() */
</listing>

<p align="right">
<a href="http://www.mkp.com/books_catalog/catalog.asp?ISBN=1-55860-686-6">
<img src="images/MK_blue.gif" border=0></a>

</BODY>
</HTML>
@


1.7
log
@*** empty log message ***
@
text
@a18 2
If you have any problems with this web page, please email <A
HREF="mailto:Jeff_Donahoo@@Baylor.edu">Jeff_Donahoo@@Baylor.edu</A>.<P>
d90 1
a90 1
</HTML>@


1.6
log
@*** empty log message ***
@
text
@d3 1
a3 1
<TITLE>Text Code Examples</TITLE>
d7 12
d20 1
a20 1
HREF="mailto:Jeff_Donahoo@@Baylor.edu">me</A>.<P>
d22 13
@


1.5
log
@*** empty log message ***
@
text
@d12 2
a13 2
<LI><A HREF="code/code.tar.gz">Tarred and gzipped archive</A>
<LI><A HREF="code/code.zip">Zip archive</A>
@


1.4
log
@*** empty log message ***
@
text
@d13 1
a13 1
<LI><A HREF="code/code.zip">Winzip archive</A>
@


1.3
log
@*** empty log message ***
@
text
@d7 3
@


1.2
log
@*** empty log message ***
@
text
@d44 14
@


1.1
log
@Initial revision
@
text
@d9 4
d38 1
a38 1
Generally, compilation is as follows:
@
